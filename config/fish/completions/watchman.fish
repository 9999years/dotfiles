# Global options
complete -c watchman -s h -l help                 -d 'Show help'
complete -c watchman      -l inetd                -d "Spawning from an inetd style supervisor"
complete -c watchman -s v -l version              -d "Show version number"
complete -c watchman -s U -l sockname -x          -d "Specify alternate sockname"
complete -c watchman -s o -l logfile -x           -d "Specify path to logfile"
complete -c watchman      -l log-level            -d "set the log level (0 = off, default is 1, verbose = 2)"
complete -c watchman      -l pidfile -x           -d "Specify path to pidfile"
complete -c watchman -s p -l persistent           -d "Persist and wait for further responses"
complete -c watchman -s n -l no-save-state        -d "Don't save state between invocations"
complete -c watchman      -l statefile -x         -d "Specify path to file to hold watch and trigger state"
complete -c watchman -s j -l json-command         -d "Instead of parsing CLI arguments, take a single json object from stdin"
complete -c watchman      -l output-encoding -r   -d "CLI output encoding. json (default) or bser"
complete -c watchman      -l server-encoding -r   -d "CLI<->server encoding. bser (default) or json"
complete -c watchman -s f -l foreground           -d "Run the service in the foreground"
complete -c watchman      -l no-pretty            -d "Don't pretty print JSON"
complete -c watchman      -l no-spawn             -d "Don't try to start the service if it is not available"
complete -c watchman      -l no-local             -d "When no-spawn is enabled, don't try to handle request in client mode if service is unavailable"

# Commands
complete -c watchman -a clock                          -d "Returns the current clock value for a watched root."
complete -c watchman -a find                           -d "Finds all files that match the optional list of patterns under the specified dir. If no patterns were specified, all files are returned."
complete -c watchman -a flush-subscriptions            -d "Flushes buffered updates to subscriptions associated with the current session, guaranteeing that they are up-to-date as of the time Watchman received the flush-subscriptions command."
complete -c watchman -a get-config                     -d "The get-config command returns the .watchmanconfig for the root. If there is no .watchmanconfig, it returns an empty configuration field:"
complete -c watchman -a get-sockname                   -d "If you’re integrating against watchman using the unix socket and either the JSON or BSER protocol, you may need to discover the correct socket path. Rather than hard-coding the path or replicating the logic discussed in Command Line, you can simply execute the CLI to determine the path. This has the side effect of spawning the service for your user if it was not already running–bonus!"
complete -c watchman -a log                            -d "Generates a log line in the watchman log."
complete -c watchman -a log-level                      -d "Changes the log level of your connection to the watchman service."
complete -c watchman -a query                          -d "Executes a query against the specified root."
complete -c watchman -a shutdown-server                -d "This command causes your watchman service to exit with a normal status code."
complete -c watchman -a since                          -d "Finds all files that were modified since the specified clockspec that match the optional list of patterns. If no patterns are specified, all modified files are returned."
complete -c watchman -a state-enter                    -d "state-enter causes a watch to be marked as being in a particular named state. The state is asserted until a corresponding state-leave command is issued or until the watchman client session that entered the state disconnects."
complete -c watchman -a state-leave                    -d "state-leave causes a watch to no longer be marked as being in a particular named state."
complete -c watchman -a subscribe                      -d "Subscribes to changes against a specified root and requests that they be sent to the client via its connection."
complete -c watchman -a trigger                        -d "Create or replace a trigger."
complete -c watchman -a trigger-del                    -d "Deletes a named trigger from the list of registered triggers. This disables and removes the trigger from both the in-memory and the saved state lists."
complete -c watchman -a trigger-list                   -d "Returns the set of registered triggers associated with a root directory."
complete -c watchman -a unsubscribe                    -d "Cancels a named subscription against the specified root. The server side will no longer generate subscription packets for the specified subscription."
complete -c watchman -a version                        -d "The version command will tell you the version and build information for the currently running watchman service:"
complete -c watchman -a watch                          -d "Deprecated starting in version 3.1. We recommend that clients adopt the watch-project command."
complete -c watchman -a watch-del                      -d "Removes a watch and any associated triggers."
complete -c watchman -a watch-del-all                  -d "Removes all watches and associated triggers."
complete -c watchman -a watch-list                     -d "Returns a list of watched dirs."
complete -c watchman -a watch-project -r               -d "Requests that the project containing the requested dir is watched for changes. Watchman will track all files and dirs rooted at the project path, and respond with the relative path difference between the project path and the requested dir."

complete -c watchman -a list-capabilities              -d "Lists capabilities of this Watchman build."
complete -c watchman -a get-pid                        -d "Gets the PID"
complete -c watchman -a debug-ageout                   -d "Undocumented debug command."
complete -c watchman -a debug-contenthash              -d "Undocumented debug command."
complete -c watchman -a debug-drop-privs               -d "Undocumented debug command."
complete -c watchman -a debug-get-subscriptions        -d "Undocumented debug command."
complete -c watchman -a debug-poison                   -d "Undocumented debug command."
complete -c watchman -a debug-recrawl                  -d "Undocumented debug command."
complete -c watchman -a debug-set-subscriptions-paused -d "Undocumented debug command."
complete -c watchman -a debug-show-cursors             -d "Undocumented debug command."
